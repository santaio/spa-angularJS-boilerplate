(function() {
  
  'use strict';

  angular.module('app', [
    'app.contact',
    'app.about',
    'app.home',
    'app.utils',
    //'seo',

    ///////////// Vendor modules
    'ui.router'

  ]);
})();

(function() {
  
  'use strict';

  angular
    .module('app.utils', []);
})();

(function() {
  
  'use strict';

  angular
    .module('app.about', []);
})();

(function() {
  
  'use strict';

  angular
    .module('app.contact', []);
})();

(function() {
  
  'use strict';

  angular
    .module('app.home', []);
})();

!function(window, document, undefined) {
    var getModule = function(angular) {
        return angular.module('seo', [])
            .run([
                '$rootScope',
                function($rootScope) {
                    $rootScope.htmlReady = function() {
                        console.log('Phantom configurated');
                        $rootScope.$evalAsync(function() { // fire after $digest
                            setTimeout(function() { // fire after DOM rendering
                                if (typeof window.callPhantom == 'function') { 
                                    window.callPhantom();
                                }
                            }, 0);
                        });
                    };
                }
            ]);
    };
    if (typeof define == 'function' && define.amd)
        define(['angular'], getModule);
    else
        getModule(angular);
}(window, document);
(function() {
  
  'use strict';

  angular
    .module('app')
    .run([
      '$rootScope',
      '$state',
      '$stateParams',
      function($rootScope, $state, $stateParams) {
        $rootScope.$state = $state;
        $rootScope.$stateParams = $stateParams;
        console.log("$stateParams", $stateParams);
      }
    ]);
})();

(function() {
  
  'use strict';

  angular
    .module('app')
    .constant('CONST', {
      API: {
        homolog: function() {
          var host = window.location.hostname;
          var path;
          
          return path;
        }
      }
    });
})();

(function() {
  
  'use strict';

  angular
    .module('app')
    .config([
      '$stateProvider',
      '$urlRouterProvider',
      function($stateProvider, $urlRouterProvider, $locationProvider) {

        ///////////// Redirects and Otherwise
        $urlRouterProvider
          .otherwise('/');
        ///////////// State Configurations
        $stateProvider
          .state('about', {
            url: '/about',
            templateUrl: 'views/about/about.html',
            controller: 'AboutController as vm'
          })
          .state('contact', {
            url: '/contact',
            templateUrl: 'views/contact/contact.html',
            controller: 'ContactController as vm'
          })
          .state('home', {
            url: '/',
            templateUrl: 'views/home/home.html',
            controller: 'HomeController as vm'
          });
          
      }
    ]);
})();

(function() {
	'use strict';

	angular.module("app")
	.controller("MainController", MainController);

	MainController.$inject = ['$rootScope'];

	function MainController($rootScope)
	{
		var vm = this;

		$rootScope.trackEvent = trackEvent;

		function trackEvent(category, action, label){
	      label = label.toLowerCase();
	      ga('send', 'event', category, action, label);
	      console.log("Tracking Event" + ": ga(send, event, "+category+", "+action+", "+label+")");
	    }
	}
})();
(function() {

  'use strict';

  angular
    .module("app")
    .controller("MainMenuController", MainMenuController);

  MainMenuController.$inject = [
    'HomeService',
    '$scope'
  ];

  function MainMenuController(HomeService, $scope) {
    var vm = this;
    
    vm.closeMenu = closeMenu;
    vm.bodyScrollTop;
    vm.htmlScrollTop;

    console.log("MainMenuController >>>>>");

    vm.init = function() {

      if (!HomeService.categories) {
        _getCategories();
      } else {
        vm.categories = HomeService.categories;
        $scope.htmlReady();
      }

      console.log("Apply Menu Jquery >>>");
      $("#menu-icon").click(function() {
        $("#menu").css("top", "0");

        vm.bodyScrollTop = $("body").scrollTop();
        vm.htmlScrollTop = $("html").scrollTop();

        $("body").css({
          "overflow-y": "scroll"
        });

        setTimeout(function(){
          $("body").css("position", "fixed");
        }, 650);
      });

      $("#product-info-menu a").click(function(e) {
        e.preventDefault();
        $(".product-info").addClass("visible-sm visible-xs");
        $($(this).attr("href")).removeClass("visible-sm visible-xs");
        $("#product-info-menu a").removeClass("active");
        $(this).addClass("active");
      });

      $("#receita-info-menu a").click(function(e) {
        e.preventDefault();
        $(".receita-info").addClass("visible-sm visible-xs");
        $($(this).attr("href")).removeClass("visible-sm visible-xs");
        $("#receita-info-menu a").removeClass("active");
        $(this).addClass("active");
      });

      //--------------------------

      $("#contato-info").carousel({
        interval: false
      });

      $("#contato-info-ctrl a").click(function(e) {
        $("#contato-info-ctrl a").removeClass("active");
        $(this).addClass("active");

        var slideTo = Number($(this).attr("data-slide-to"));

        $("#contato-info").carousel(slideTo);
        e.preventDefault();
      });


      $('.menu-product .rollover').css({
        "top": "0",
        "left": "0",
        "bottom": "initial",
        "right": "initial",
        "transform": "initial",
        "display": "none"
      });

      // Menu hover effect
      $('.menu-product').hoverdir({hoverElem: '.rollover'});


      $('.menu-product').mouseenter(function(){
        var top = $(this).children(".rollover").css("top");
        var left = $(this).children(".rollover").css("left");

        top = top == "0px" ? "0%" : top;
        left = left == "0px" ? "0%" : left;


        $(this).children(".rollover").children(".content").children(".rollover-title").css({
          "transition": "initial",
          "transform": "translate("+left+","+top+")"
        });

        $(this).children(".rollover").children(".content").children(".rollover-txt").css({
          "transition": "initial",
          "transform": "translate("+left+","+top+")"
        });

        if(top < 0) {
          // SaÃ­da pra baixo
          $(this).children(".menu-product-title").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s");
          $(this).children("img").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s .1s");

        } else if(top > 0) {
          // Saida pra cima
          $(this).children(".menu-product-title").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s .1s");
          $(this).children("img").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s");
        } else {
          // Saida da direita pra esquerda ou vice versa
          $(this).children(".menu-product-title").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s .1s");
          $(this).children("img").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s");
        }

        $(this).children(".menu-product-title").css({
          "transform": "translate("+(-Number(left.slice(0, -1)))+"px,"+(-Number(top.slice(0, -1)))+"px)"
        });

        if(top != "0%"){
          $(this).children("img").css({
            "transform": "translate(-50%,"+(-Number(top.slice(0, -1)))+"%)"
          });
        } else if (left != "0%") {
          $(this).children("img").css({
            "transform": "translate("+(-Number(left.slice(0, -1)))+"%, 0%)"
          });
        }


        setTimeout(function(){
          $(".menu-product .rollover .content .rollover-title").css({
            "transition": "all .4s ease-in-out .1s",
            "transform": "translate(0, 0)"
          });

          $(".menu-product .rollover .content .rollover-txt").css({
            "transition": "all .4s ease-in-out .2s",
            "transform": "translate(0, 0)"
          });

        }, 10);

      });

      $('.menu-product').mouseleave(function(){

        if(top < 0) {
          // Entrada pra cima
          $(this).children(".menu-product-title").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s .1s");
          $(this).children("img").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s");
        } else if (top > 0){
          // Entrada pra baixo
          $(this).children(".menu-product-title").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s");
          $(this).children("img").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s .1s");
        } else {
          // Entrada da direita pra esquerda ou vice versa
          $(this).children(".menu-product-title").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s .1s");
          $(this).children("img").css("transition", "all cubic-bezier(.49,.08,.34,.97) .5s");
        }

        $(this).children("img").css({
            "transform": "translate(-50%, 0%)"
        });

        $(this).children(".menu-product-title").css({
            "transform": "translate(0%, 0%)"
        });

      });
      
    };

    function _getCategories() {
      HomeService
        .setCategories()
        .then(function() {
          vm.categories = HomeService.categories;
          $scope.htmlReady();
          console.log("Categories :: ", vm.categories);
        });
    }

    function closeMenu() {
      $("#menu").css("top", "-100%");
      $("body").css({
        "overflow-y": "auto",
        "position": "static"
      });
      $('body').scrollTop(vm.bodyScrollTop);
      $('html').scrollTop(vm.htmlScrollTop);
    }

    vm.init();
  }
})();

(function() {

  'use strict';

  angular
    .module('app')
    .controller('NewsletterController', NewsletterController);

  NewsletterController.$inject = [
    '$http',
    '$timeout',
    '$scope',
    'CONST'
  ];

  function NewsletterController($http, $timeout, $scope, CONST) {
    var vm = this;

    ///////////// Public Properties
    vm.news = {};

    ///////////// Private Properties

    ///////////// Public Methods
    vm.send = send;
    vm.showMessage = false;

    ///////////// Private Methods

    ///////////// Events

    ///////////// Bootstrap

    ///////////// Function Declarations
    function send(news) {
      $http({
        method: 'POST', 
        url: CONST.API.homolog() + '/admin/site/api/newsletter',
        data: news,
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
      }).then(function(response) {
        vm.showMessage = true;
        $scope.htmlReady();
        $timeout(function() {
          vm.showMessage = false;
        }, 5000);
      }, function(err) {
        console.log('An error occurred to register in the newsletter');
      });
    }
  }
})();

angular.module("app")
.controller("TransitionController", TransitionController);

TransitionController.$inject = ['$rootScope', '$location', '$state', '$scope'];

function TransitionController($rootScope, $location, $state, $scope)
{
	var containerShapes = $("#transition-shapes-container");
	var shape1 = containerShapes.find("#shape1");
	var shape2 = containerShapes.find("#shape2");
	var shape3 = containerShapes.find("#shape3");

	var vm = this;
	$rootScope.isTransitioning = false;

	console.log("Transition Controller >>>>>");

	$rootScope.$on('$stateChangeStart',
	function(event, toState, toParams, fromState, fromParams){
		
		if(!$rootScope.isTransitioning){
			event.preventDefault();
			shape1.animate({"top" : "100%"}, 0);
	    	shape2.animate({"top" : "100%"}, 0);
	    	shape3.animate({"top" : "100%"}, 0);
	    	containerShapes.css("top", "0%");
	    	$rootScope.isTransitioning = true;
			containerShapes.show();

		    shape1.animate({"top": "0%"}, 1000, 'easeInOutQuart', function(){
		    	$state.go(toState, toParams);
		    });

		    shape2.delay(300).animate({"top": "0%"}, 1000, 'easeInOutQuart');

		    shape3.delay(500).animate({"top": "0%"}, 1000, 'easeInOutQuart', function(){
		    	containerShapes.animate({"top": "-100%"}, 1000, 'easeOutQuart', function(){
			    	shape1.animate({"top" : "100%"}, 0);
			    	shape2.animate({"top" : "100%"}, 0);
			    	shape3.animate({"top" : "100%"}, 0);
			    	containerShapes.hide();
			    	$rootScope.isTransitioning = false;	
				});
		    });

		}
	    
	    // transitionTo() promise will be rejected with
	    // a 'transition prevented' error
	});

	$rootScope.$on('$stateChangeSuccess',
	function(){
		//console.log('Entrou na stateChangeSuccess');
				
	});

	$rootScope.changeArea = function(route, orientation)
	{
		console.log("Change AREA : route :: ", route);
		console.log("Change AREA : orientation :: ", orientation);


		$location.path(route);

		// containerShapes.show();
		// shape1.animate({})
	}

	vm.init = function()
	{
		containerShapes.hide();
        $scope.htmlReady();      		
	}

	vm.init();
}
(function() {

  'use strict';

  angular
    .module('app.utils')
    .directive('phoneInput', phoneInput);

  phoneInput.$inject = [
    '$filter',
    '$browser'
  ];

  function phoneInput($filter, $browser) {
    return {
      require: 'ngModel',
      link: function($scope, $element, $attrs, ngModelCtrl) {
        var listener = function() {
          var value = $element.val().replace(/[^0-9]/g, '');
          $element.val($filter('tel')(value, false));
        };

        ngModelCtrl.$parsers.push(function(viewValue) {
          return viewValue.replace(/[^0-9]/g, '').slice(0,10);
        });

        ngModelCtrl.$render = function() {
          $element.val($filter('tel')(ngModelCtrl.$viewValue, false));
        };

        $element.bind('change', listener);
        $element.bind('keydown', function(event) {
          var key = event.keyCode;

          if (key == 91 || (15 < key && key < 19) || (37 <= key && key <= 40)){
            return;
          }

          $browser.defer(listener);
        });

        $element.bind('paste cut', function() {
          $browser.defer(listener);
        });
      }
    };   
  }
})();

(function() {

  'use strict';

  angular
    .module('app.utils')
    .filter('tel', tel);

  tel.$inject = [];

  function tel() {
    return function (tel) {

      if (!tel) { return ''; }

      var value = tel.toString().trim().replace(/^\+/, '');

      if (value.match(/[^0-9]/)) {
        return tel;
      }

      var country, city, number;

      switch (value.length) {
        case 1:
        case 2:
        case 3:
          city = value;
          break;

        default:
          city = value.slice(0, 2);
          number = value.slice(2);
      }

      if (number) {

        if (number.length > 8) {
          number = number.slice(0, 5) + '-' + number.slice(5,9);
        } else if (number.length > 4) {
          number = number.slice(0, 4) + '-' + number.slice(4,8);
        } else {
          number = number;
        }

        return ("(" + city + ") " + number).trim();
      } else {
        return "(" + city;
      }

    };
  }
})();

(function() {

  'use strict';

  angular
    .module('app.about')
    .controller('AboutController', AboutController);

  AboutController.$inject = [
    'AboutService',
    '$scope',
    '$rootScope',
  ];

  function AboutController(AboutService, $scope, $rootScope) {
    var vm = this;

    ///////////// Public Properties

    ///////////// Private Properties

    ///////////// Public Methods
    vm.getData      = getData;

    ///////////// Private Methods
    var _init = _init;

    /////////////
    
    _init();

    ///////////// Function Declarations

    function _init() {
      console.log('Init about.controller.js >>>>>>>');
      //vm.getData();
    }

    function getData() {
      AboutService
        .getData()
        .then(function() {
          vm.data = AboutService.data;
        })
        .catch(function(err) {
          console.log('Error on about controller > service');
        });
    }

  }
})();

(function() {

  'use strict';

  angular
    .module('app.about')
    .service('AboutService', AboutService);

  AboutService.$inject = [
    '$http',
    'CONST'
  ];

  function AboutService($http, CONST) {
    var self = this;

    ///////////// Public Properties
    self.data = {};

    ///////////// Public Methods
    self.getData = getData;

    ///////////// Function Declarations
    function getData() {
      return $http
        .get('api/url')
        .then(function(payload) {
          
          var data = payload.data;

          self.data = data;
        });
    }
  }
})();

(function() {

  'use strict';

  angular
    .module('app.contact')
    .controller('ContactController', ContactController);

  ContactController.$inject = [
    'ContactService',
    '$scope',
    '$rootScope'
  ];

  function ContactController(ContactService, $scope, $rootScope) {
    var vm = this;

    ///////////// Public Properties
    vm.message   = {};
    vm.data      = {};

    ///////////// Private Properties

    ///////////// Public Methods
    vm.sendMessage  = sendMessage;

    ///////////// Private Methods
    var _init      = _init;
    var _getData   = _getData;

    ///////////// Events

    ///////////// Bootstrap
    _init();

    ///////////// Function Declarations
    function _init() {
      console.log('Initialized contact controler >>>>');
      //_getData();   
    }

    function _getData() {
      ContactService
        .getData()
        .then(function() {
          vm.data = ContactService.data;
        })
        .catch(function(err) {
          console.log('Error in contact controller > service');
        });
    }


    function sendMessage(message) {
      ContactService
        .sendMessage(message);
    }

  }
})();

(function() {

  'use strict';

  angular
    .module('app.contact')
    .service('ContactService', ContactService);

  ContactService.$inject = [
    '$http',
    'CONST'
  ];

  function ContactService($http, CONST) {
    var vm = this;

    ///////////// Public Properties
    vm.states = [];

    ///////////// Private Properties

    ///////////// Public Methods
    vm.getData     = getData;
    vm.sendMessage = sendMessage;

    ///////////// Private Methods

    ///////////// Events

    ///////////// Function Declarations

    function getData() {
      return $http
        .get('api/url')
        .then(function(payload) {

          var data = payload.data.data;

          vm.data = data;

        });
    }

    function sendMessage(message) {
      $http({
        method: 'POST', 
        url: 'message/destination/url',
        data: message,
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
      }).then(function(response) {
         console.log(response);
           
      }, function(err) {
        console.log('An error occurred to send message');
      });
    }

    
  }
})();

(function() {

  'use strict';

  angular
    .module('app.home')
    .controller('HomeController', HomeController);

  HomeController.$inject = [
    'HomeService',
    '$scope',
    '$rootScope'
  ];

  function HomeController(HomeService, $scope, $rootScope) {
    var vm = this;

    ///////////// Public Properties
    vm.data        = {};

    ///////////// Private Properties
    
    ///////////// Public Methods

    ///////////// Private Methods
    var _init          = _init;
    var _getData       = _getData;

    ///////////// Events

    ///////////// Bootstrap
    _init();

    ///////////// Function Declarations
    function _init() {
      //_getData();
    }

    function _getData() {
      HomeService
        .getData()
        .then(function() {
          vm.data = HomeService.data;
        })
        .catch(function(err) {
          console.log('Error in home controller > service');
        });
    }


  }
})();

(function() {

  'use strict';

  angular
    .module('app.home')
    .service('HomeService', HomeService);

  HomeService.$inject = [
    '$http',
    'CONST'
  ];

  function HomeService($http, CONST) {
    var self = this;

    ///////////// Public Properties
    self.data = {};

    ///////////// Public Methods
    self.getData       = getData;

    ///////////// Function Declarations
    function getData() {
      return $http
        .get('api/url')
        .then(function(payload) {

          var data = payload.data;

          self.data = data;
        });
    }

    
  }
})();
